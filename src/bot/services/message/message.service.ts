import { Injectable } from '@nestjs/common';
import { Context } from 'telegraf';
import { PaymentService } from '../payment/payment.service';
import { PromoService } from '../promo/promo.service';

@Injectable()
export class MessageService {
  constructor(
    private readonly paymentService: PaymentService,
    private readonly promoService: PromoService,
  ) {}

  async handleText(ctx: Context) {
    const text = ctx.message['text'];

    switch (text) {
      case 'üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è':
        await ctx.reply('üìñ –≠—Ç–æ —Ä–∞–∑–¥–µ–ª "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è". –ó–¥–µ—Å—å lorem ipsum...');
        break;

      case 'üí≥ –û–ø–ª–∞—Ç–∞':
        await this.paymentService.sendPaymentMenu(ctx); // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–µ–Ω—é –æ–ø–ª–∞—Ç—ã
        break;

      case 'üîô –ù–∞–∑–∞–¥':
        await ctx.reply('üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.');
        await this.sendMainMenu(ctx); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        break;

      case '‚ùì –ü–æ–º–æ—â—å':
        await ctx.reply('‚ùì –≠—Ç–æ —Ä–∞–∑–¥–µ–ª "–ü–æ–º–æ—â—å". –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
        break;

      case 'üéÅ –ü—Ä–æ–º–æ':
        await ctx.reply('üéÅ –≠—Ç–æ —Ä–∞–∑–¥–µ–ª "–ü—Ä–æ–º–æ".');
        await this.promoService.sendPromoMenu(ctx); // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ–º–æ
        break;

      default:
        await ctx.reply('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é.');
    }
  }

  private async sendMainMenu(ctx: Context) {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await ctx.reply('üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', {
      reply_markup: {
        keyboard: [
          [{ text: 'üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è' }],
          [{ text: 'üí≥ –û–ø–ª–∞—Ç–∞' }],
          [{ text: '‚ùì –ü–æ–º–æ—â—å' }, { text: 'üéÅ –ü—Ä–æ–º–æ' }],
        ],
        resize_keyboard: true,
      },
    });
  }
}